{"version":3,"sources":["logo.svg","reducers/blog_reducers.js","reducers/index.js","actions/types.js","store.js","Root.js","components/widget/ImgHead.js","containers/Top.js","actions/settings.js","containers/Blog.js","actions/api_blog.js","containers/Profile.js","containers/English.js","components/widget/Logo.js","components/layout/Header.js","components/layout/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","data","combineReducers","blog","state","arguments","length","undefined","action","nextState","Object","assign","type","payload","console","log","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Root","props","react_default","a","createElement","es","Fragment","children","ImgHead","className","style","backgroundImage","concat","src","title","Top","widget_ImgHead","Component","headers","Content-Type","Blog","this","fetchBlogList","map","connect","dispatch","fetch","baseAddress","method","then","response","ok","Error","statusText","json","responseData","Profile","English","Logo","Header","widget_Logo","Link","to","Footer","App","BrowserRouter","layout_Header","Route","path","exact","component","layout_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4514f1ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import {FETCH_BLOG_LIST} from \"../actions/types\";\n\n\nconst initialState = {data:[],}\n\n\nexport default function(state=initialState,action){\n    const nextState = Object.assign({},state);\n    switch(action.type){\n        case FETCH_BLOG_LIST:\n        nextState.data = action.payload;\n        console.log(nextState);\n        return nextState;\n        default:\n        return nextState;\n    }\n}","import {combineReducers} from 'redux';\nimport blog_reducers from './blog_reducers';\n\nexport default combineReducers({\n    blog:blog_reducers,\n});","export const FETCH_BLOG_LIST = \"FETCH_BLOG_LIST\";\n\n","import {createStore,applyMiddleware,compose} from 'redux';\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nconst initialStore = {};\nconst middleware = [thunk];\n\n\nconst store = createStore(\n    rootReducer,\n    initialStore,\n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // Redux Dev Tool使用のための設定\n    )\n)\n\nexport default store;","import React from 'react';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\n\nexport default (props)=>{\n    return(\n        <Provider store={store}>\n        <React.Fragment>\n            {props.children}\n        </React.Fragment>\n        </Provider>\n    )\n}","import React from \"react\";\n\n\nconst ImgHead =(props)=>{\n    return (\n        <div className=\"area--ImgHead\"\n        style={\n                {\n                    backgroundImage:`url(static/img/${props.src})`,\n            }\n                }\n        >\n        <h2 className=\"title--ImgHead\">{props.title}</h2>\n        </div>\n    )\n}\n\nexport default ImgHead;","import React,{Component} from \"react\";\nimport ImgHead from \"../components/widget/ImgHead\"\n\n\nclass Top extends Component{\n    render(){\n        return(\n            <div className=\"\">\n            <ImgHead src=\"img_top.jpg\" title=\"Top\"/>\n                このサイトは勉強のメモ用として利用していこうと考えています。<br/>\n            </div>\n        )\n    }\n}\n\n\nexport default Top;","export const baseAddress = \"http://localhost:8000\";\nexport const headers = {\n    \"Content-Type\": \"application/json\"\n}","import React,{Component} from \"react\";\nimport {connect} from 'react-redux';\nimport {fetchBlogList} from '../actions/api_blog';\nimport ImgHead from \"../components/widget/ImgHead\"\n\n\nclass Blog extends Component{\n    componentWillMount(){\n        this.props.fetchBlogList();\n        \n        \n    }\n    render(){\n        return(\n            <div>\n                <ImgHead src=\"img_blog.jpg\" title=\"Blog\"/>\n                {this.props.data.map(data=>{\n                    console.log(data);\n                    return(<div>\n                        <img src={data[\"main_image\"]}/>\n                        <div>{data[\"title\"]}</div>\n                        \n                        </div>)\n                })}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state=>(\n    {data:state.blog.data}\n)\n\nexport default connect(mapStateToProps,{fetchBlogList})(Blog);","import {FETCH_BLOG_LIST} from \"./types\";\nimport {baseAddress,headers} from \"./settings\";\n\n\nexport const fetchBlogList = ()=>(dispatch)=>{\n    const url = baseAddress+\"/api/blog/blog_list\"\n    return fetch(\n        url,\n        {\n            method:\"GET\",\n            headers:headers\n        }\n    ).then(\n        response=>{\n            console.log(response);\n            if(!response.ok){\n                throw Error(response.statusText)\n            }\n            return response.json();\n        }\n    ).then(\n        responseData=>{\n            const data = responseData.data;\n            dispatch(\n                {\n                    type:FETCH_BLOG_LIST,\n                    payload:data\n                }\n            )\n        }\n    )\n}","import React,{Component} from \"react\";\nimport ImgHead from \"../components/widget/ImgHead\"\n\n\nclass Profile extends Component{\n    render(){\n        return(\n            <div>\n                <ImgHead src=\"img_profile.jpg\" title=\"Profile\"/>\n                <h2>Profile</h2>\n                <div>\n                    <section>\n                        機械学習とWebの勉強をしているエンジニアです。<br/>\n                        英語の勉強も頑張ろうと思っているのですが、なかなか進みません。<br/>\n                        Webについての勉強が進んで来たのでいよいよホームページを作成しようという事にいたりました。<br/>\n                        勉強用の動画も上げたりなどするかもしれません。<br/>\n                        意見などあれば言っていただけると嬉しいです。<br/>\n                    </section>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile;","import React,{Component} from \"react\";\nimport ImgHead from \"../components/widget/ImgHead\"\n\n\nclass English extends Component{\n    render(){\n        return(\n            <div>\n                <ImgHead src=\"img_english.jpg\" title=\"English\"/>\n                Englishページ\n            </div>\n        )\n    }\n}\n\nexport default English;","import React from \"react\";\n\n\n\nconst Logo = ()=>{\n    return (\n        <div className=\"area--Logo\">\n            Oggy's Blog\n        </div>\n    )\n}\n\nexport default Logo;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Logo from \"../widget/Logo\";\n\nconst Header = ()=>{\n    return (\n        <header>\n            <Logo/>\n            <nav className=\"nav--Header\">\n                <li>\n                    <Link to=\"/\" className=\"\">Top</Link>\n                </li>\n                <li>\n                    <Link to=\"/profile\" className=\"\">Profile</Link>\n                </li>\n                <li>\n                    <Link to=\"/blog\" className=\"\">Blog</Link>\n                </li>\n                <li>\n                    <Link to=\"/english\" className=\"\">English</Link>\n                </li>\n            </nav>\n        </header>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\n\nconst Footer = ()=>{\n    return (\n        <footer>\n            ogihara.inc\n        </footer>\n    )\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport Root from \"./Root\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport Top from \"./containers/Top\";\nimport Blog from \"./containers/Blog\";\nimport Profile from \"./containers/Profile\";\nimport English from \"./containers/English\";\nimport Header from \"./components/layout/Header\";\nimport Footer from \"./components/layout/Footer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Root>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <main>\n              <Route path=\"/\" exact component={Top} />\n              <Route path=\"/blog\" component={Blog} />\n              <Route path=\"/profile\" component={Profile} />\n              <Route path=\"/english\" component={English} />\n            </main>\n            <Footer />\n          </div>\n        </Router>\n      </Root>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}