{"version":3,"sources":["reducers/blog_reducers.js","reducers/english_reducers.js","reducers/index.js","actions/types.js","store.js","Root.js","config.js","components/widget/ImgHead.js","components/layout/Profile.js","containers/Top.js","actions/api_blog.js","components/layout/BlogList.js","components/widget/Code.js","components/layout/BlogComment.js","components/layout/BlogDetail.js","containers/Blog.js","components/layout/EnglishList.js","components/layout/EnglishExplanation.js","containers/English.js","actions/api_english.js","containers/Contact.js","components/widget/Logo.js","components/layout/Header.js","components/layout/Footer.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["initialState","data","selectedData","undefined","sentenceList","combineReducers","blog","state","arguments","length","action","nextState","Object","assign","type","payload","english","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","Root","props","react_default","a","createElement","es","Fragment","children","API_ROOT","HEADERS","Content-Type","ImgHead","className","style","backgroundImage","concat","src","title","Profile","Component","Top","widget_ImgHead","layout_Profile","fetchBlogList","dispatch","fetch","method","headers","then","response","ok","Error","statusText","json","responseData","fetchBlogDetail","uuid","BlogList","map","Link","to","moment","format","tags","tag","Code","default_highlight","language","lang","docco","code","BlogComment","comments","comment","name","message","created","reply_list","reply","BlogDetail","_this","this","resetBlogDetail","urlList","window","location","split","urlParams","edited","sections","section","href","id","paragraphs","paragraph","is_code","widget_Code","content","programing_language","image","layout_BlogComment","connect","Promise","resolve","reject","Blog","Route","path","exact","render","_ref","match","layout_BlogList","component","EnglishList","border","sentence","content_eng","content_jp","vocabularies","voc","EnglishExplanation","English","fetchSentenceList","layout_EnglishExplanation","layout_EnglishList","Contact","Logo","Header","widget_Logo","Footer","App","BrowserRouter","layout_Header","layout_Footer","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8f389b46.chunk.js","sourcesContent":["import {FETCH_BLOG_LIST,RESET_BLOG_DETAIL,FETCH_BLOG_DETAIL} from \"../actions/types\";\n\n\nconst initialState = {data:[],selectedData:undefined}\n\n\nexport default function(state=initialState,action){\n    const nextState = Object.assign({},state);\n    switch(action.type){\n        case FETCH_BLOG_LIST:\n        nextState.data = action.payload;\n        return nextState;\n        case RESET_BLOG_DETAIL:\n        nextState.selectedData = undefined\n        return nextState;\n        case FETCH_BLOG_DETAIL:\n        nextState.selectedData = action.payload.data;\n        return nextState;\n        default:\n        return nextState;\n    }\n}","import {FETCH_SENTENCE_LIST} from \"../actions/types\";\n\n\nconst initialState = {\n    sentenceList:[],\n}\n\nexport default function(state=initialState,action){\n    const nextState = Object.assign({},state);\n    switch(action.type){\n        case FETCH_SENTENCE_LIST:\n        nextState.sentenceList = action.payload;\n        return nextState;\n        default:\n        return nextState;\n    }\n}","import {combineReducers} from 'redux';\nimport blog_reducers from './blog_reducers';\nimport english_reducers from \"./english_reducers\";\n\nexport default combineReducers({\n    blog:blog_reducers,\n    english:english_reducers,\n});","export const FETCH_BLOG_LIST = \"FETCH_BLOG_LIST\";\nexport const FETCH_BLOG_DETAIL=\"FETCH_BLOG_DETAIL\";\nexport const FETCH_VOCABULARY_LIST = \"FETCH_VOCABULARY_LIST\";\nexport const FETCH_SENTENCE_LIST = \"FETCH_SENTENCE_LIST\";\nexport const RESET_BLOG_DETAIL=\"RESET_BLOG_DETAIL\";\n","import {createStore,applyMiddleware,compose} from 'redux';\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nconst initialStore = {};\nconst middleware = [thunk];\n\n\nconst store = createStore(\n    rootReducer,\n    initialStore,\n    compose(\n        applyMiddleware(...middleware),\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // Redux Dev Tool使用のための設定\n    )\n)\n\nexport default store;","import React from 'react';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\n\nexport default (props)=>{\n    return(\n        <Provider store={store}>\n        <React.Fragment>\n            {props.children}\n        </React.Fragment>\n        </Provider>\n    )\n}","export const API_ROOT = \"http://localhost:8000\";\nexport const HEADERS =  {\n    \"Content-Type\": \"application/json\"\n}","import React from \"react\";\nimport { API_ROOT } from \"../../config\";\n\nconst ImgHead =(props)=>{\n    return (\n        <div className=\"area--ImgHead\"\n        style={\n                {\n                    backgroundImage:`url(${API_ROOT}/static/img/${props.src})`,\n            }\n                }\n        >\n        <h2 className=\"title--ImgHead\">{props.title}</h2>\n        </div>\n    )\n}\n\nexport default ImgHead;","import React,{Component} from \"react\";\nimport ImgHead from \"../widget/ImgHead\"\n\n\nclass Profile extends Component{\n    render(){\n        return(\n            <div>\n                <h3>Profile</h3>\n                <div>\n                    <section>\n                        機械学習とWebの勉強をしているエンジニアです。<br/>\n                        英語の勉強も頑張ろうと思っているのですが、なかなか進みません。<br/>\n                        Webについての勉強が進んで来たのでいよいよホームページを作成しようという事にいたりました。<br/>\n                        勉強用の動画も上げたりなどするかもしれません。<br/>\n                        意見などあれば言っていただけると嬉しいです。<br/>\n                    </section>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile;","import React, { Component } from \"react\";\nimport ImgHead from \"../components/widget/ImgHead\";\nimport Profile from \"../components/layout/Profile\";\n\nclass Top extends Component {\n  render() {\n    return (\n      <div className=\"\">\n        <ImgHead src=\"img_top.jpg\" title=\"Top\" />\n        <Profile></Profile>\n      </div>\n    );\n  }\n}\n\nexport default Top;\n","import {FETCH_BLOG_LIST,FETCH_BLOG_DETAIL,RESET_BLOG_DETAIL} from \"./types\";\nimport {API_ROOT,HEADERS} from \"../config\";\n\n\nexport const fetchBlogList = ()=>(dispatch)=>{\n    // ブログのリストを取得\n    // [TODO]ページング\n    const url = API_ROOT+\"/api/blog/blog_list\"\n    return fetch(\n        url,\n        {\n            method:\"GET\",\n            headers:HEADERS\n        }\n    ).then(\n        response=>{\n            if(!response.ok){\n                throw Error(response.statusText)\n            }\n            return response.json();\n        }\n    ).then(\n        responseData=>{\n            const data = responseData.data;\n            dispatch(\n                {\n                    type:FETCH_BLOG_LIST,\n                    payload:data\n                }\n            )\n        }\n    )\n}\n\nexport const fetchBlogDetail = (uuid) => (dispatch)=>{\n    const url = API_ROOT + \"/api/blog/blog_detail/\" + uuid;\n    return fetch(\n        url,\n        {\n            method:\"GET\",\n            headers:HEADERS\n        }\n    ).then(\n        response=>{\n            if(!response.ok){\n                throw Error(response.statusText)\n            }\n            return response.json()\n        }\n    ).then(responseData=>{\n        dispatch({\n            type:FETCH_BLOG_DETAIL,\n            payload:responseData\n        })\n    })\n}\nexport const resetBlogDetail = ()=>(dispatch)=>{\n    const promise = new Promise((resolve,reject)=>{\n        dispatch({\n            type:RESET_BLOG_DETAIL\n        })\n        resolve();\n    });\n    return promise;\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { API_ROOT } from \"../../config\";\nimport moment from \"moment\";\n\nconst BlogList = props => {\n  return (\n    <div className=\"area-main--BlogList\">\n      {props.data.map(data => {\n        return (\n          <div className=\"lnk-detail--BlogList\">\n            <Link to={`/blog/detail/${data[\"uuid\"]}`}>\n              <img\n                src={API_ROOT + data[\"main_image\"]}\n                className=\"img-card--BlogList\"\n              />\n            </Link>\n            <Link\n              className=\"ttl-card--BlogList\"\n              to={`/blog/detail/${data[\"uuid\"]}`}\n            >\n              {data[\"title\"]}\n            </Link>\n            <div className=\"sub-card--BlogList\">\n              <div className=\"created-card--BlogList\">\n                {moment(data[\"created\"]).format(\"YYYY/MM/DD\")}\n              </div>\n              <div className=\"area-taglist--BlogList\">\n              <img src={`${API_ROOT}/static/img/icon_tag.png`} className=\"icon-tag--BlogList\"/>\n                {data.tags.map(tag => {\n                  return (\n                    <div className=\"tag-card--BlogList\">{tag[\"name\"]}</div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\nexport default BlogList;\n","import React from \"react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/styles/hljs\";\nconst Code = props => {\n  return (\n    <SyntaxHighlighter language={props.lang} style={docco}>\n      {props.code}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default Code;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst BlogComment = props => {\n  return (\n    <div className=\"area--BlogComment\">\n      <div className=\"ttl--BlogComment\">コメント</div>\n      <div className=\"area-comment--BlogComment\">\n        {props.comments.map(comment => {\n          return (\n            <div className=\"box-comment--BlogComment\">\n              {comment.name}\n              {comment.message}\n              {moment(comment.created).format(\"YYYY/MM/DD\")}\n              <button>返信</button>\n              <div className=\"area-reply--BlogComment\">\n                {comment.reply_list.map(reply => {\n                  return (\n                    <div className=\"box-reply--BlogComment\">\n                      {reply.message}\n                      {reply.name}\n                      {moment(reply.created).format(\"YYYY/MM/DD\")}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default BlogComment;\n","import React, { Component } from \"react\";\nimport {\n  fetchBlogList,\n  fetchBlogDetail,\n  resetBlogDetail\n} from \"../../actions/api_blog\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport Code from \"../widget/Code\";\nimport BlogComment from \"../layout/BlogComment\";\nimport { API_ROOT } from \"../../config\";\n\nclass BlogDetail extends Component {\n  componentWillMount() {\n    this.props.resetBlogDetail().then(() => {\n      // urlからuuidを取得\n      const urlList = window.location[\"href\"].split(\"/\");\n      const urlParams = urlList[urlList.length - 1];\n\n      this.props.fetchBlogDetail(urlParams);\n    });\n  }\n  render() {\n    if (this.props.selectedData == undefined) {\n      // まだデータが取得できていない時はundefinedになっている\n      return <div>データを取得中です</div>;\n    } else {\n      return (\n        <div className=\"area-BlogDetail\">\n          <div className=\"area-main--BlogDetail\">\n            <h3 className=\"ttl3--BlogDetail\">\n              {this.props.selectedData.title}\n            </h3>\n            <div className=\"timestamp--BlogDetail\">\n              <div className=\"created--BlogDetail\">\n                <div>作成日:</div>\n                <div>\n                  {moment(this.props.selectedData.created).format(\"YYYY/MM/DD\")}\n                </div>\n              </div>\n              <div className=\"edited--BlogDetail\">\n                <div>最終編集日:</div>\n                <div>\n                  {moment(this.props.selectedData.edited).format(\"YYYY/MM/DD\")}\n                </div>\n              </div>\n            </div>\n            <div className=\"area-index--BlogDetail\">\n              <div className=\"ttl-index--BlogDetail\">Table Of Contents</div>\n              <nav className=\"ul-index--BlogDetail\">\n                {this.props.selectedData.sections.map(section => {\n                  return (\n                    <li className=\"li-index--BlogDetail\">\n                      <a\n                        className=\"lnk-index--BlogDetail\"\n                        href={`#${section.uuid}`}\n                      >\n                        {section.title}\n                      </a>\n                    </li>\n                  );\n                })}\n              </nav>\n            </div>\n            <div>\n              {this.props.selectedData.sections.map(section => {\n                return (\n                  <div className=\"area-section-BlogDetail\" id={section.uuid}>\n                    <h4 className=\"ttl4--BlogDetail\">{section.title}</h4>\n                    <div className=\"area-paragraph--BlogDetail\">\n                      {section.paragraphs.map(paragraph => {\n                        if (paragraph.is_code) {\n                          return (\n                            <div className=\"area-code--BlogDetail\">\n                              <Code\n                                code={paragraph.content}\n                                lang={paragraph.programing_language}\n                              />\n                            </div>\n                          );\n                        }\n                        return (\n                          <div className=\"area-paragraph--BlogDetail\">\n                            {paragraph.image && (\n                              <div className=\"area-image-paragraph--BlogDetail\">\n                                <img src={`${API_ROOT}${paragraph.image}`} />\n                              </div>\n                            )}\n                            <div className=\"area-content-paragraph--BlogDetail\">\n                              {paragraph.content}\n                            </div>\n                            <br />\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <BlogComment comments={this.props.selectedData.comments} />\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => ({ selectedData: state.blog.selectedData });\n\nexport default connect(\n  mapStateToProps,\n  { fetchBlogList, fetchBlogDetail, resetBlogDetail }\n)(BlogDetail);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchBlogList,fetchBlogDetail } from \"../actions/api_blog\";\nimport ImgHead from \"../components/widget/ImgHead\";\nimport { API_ROOT } from \"../config\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport BlogList from \"../components/layout/BlogList\";\nimport BlogDetail from \"../components/layout/BlogDetail\";\nimport { Route} from \"react-router-dom\";\n\n\nclass Blog extends Component {\n  componentWillMount() {\n    this.props.fetchBlogList();\n  }\n  render() {\n    return (\n      <div className=\"area--Blog\">\n        <ImgHead src=\"img_blog.jpg\" title=\"Blog\" />\n        <Route path=\"/blog\" exact render={({match}) => (\n    <BlogList data={this.props.data} match={match} />\n  )}/>\n        <Route path=\"/blog/detail/:uuid\" component={BlogDetail}/>\n    </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({ data: state.blog.data });\n\nexport default connect(\n  mapStateToProps,\n  { fetchBlogList,fetchBlogDetail }\n)(Blog);\n ","import React from \"react\";\nimport moment from \"moment\";\n\nconst EnglishList = props => {\n  // HOMEに表示する\n  return (\n    <table className=\"table--EnglishList\" border=\"1\">\n      <tr>\n        <th>英文</th>\n        <th>訳文</th>\n        <th>単語</th>\n        <th>登録日</th>\n      </tr>\n      {props.sentenceList.map(sentence => {\n        return (\n          <tr>\n            <td>{sentence.content_eng}</td>\n            <td>{sentence.content_jp}</td>\n            <td>\n              {sentence.vocabularies.map(voc => {\n                return (\n                  <React.Fragment>\n                    <ul>\n                      <li>\n                        <div>{voc.content_eng}</div>\n                        <div>{voc.content_jp}</div>\n                      </li>\n                    </ul>\n                  </React.Fragment>\n                );\n              })}\n            </td>\n\n            <td>{moment(sentence.created).format(\"YYYY/MM/DD\")}</td>\n          </tr>\n        );\n      })}\n    </table>\n  );\n};\n\nexport default EnglishList;\n","import React from \"react\";\n\n\nconst EnglishExplanation = (props)=>{\n    return (\n        <div className=\"area--EnglishExplanation\">\n        <div>\n            このページはあくまで自分の英語の勉強用のページです。<br/>\n            自分が日頃読んでいる英語の本、サイトで気になった表現、読めなかった文章\n            などをメモしておきます。\n        </div>\n        </div>\n    )\n}\n\nexport default EnglishExplanation;","import React,{Component} from \"react\";\nimport ImgHead from \"../components/widget/ImgHead\"\nimport {fetchSentenceList} from \"../actions/api_english\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport EnglishList from \"../components/layout/EnglishList\";\nimport EnglishExplanation from \"../components/layout/EnglishExplanation\";\n\nclass English extends Component{\n    componentWillMount(){\n        this.props.fetchSentenceList();\n    }\n    render(){\n        return(\n            <div className=\"area--English\">\n                <ImgHead src=\"img_english.jpg\" title=\"English\"/>\n                <div className=\"\">\n                    <EnglishExplanation/>\n                </div>\n                <div className=\"area-table--English\">\n                    <EnglishList sentenceList={this.props.sentenceList}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state =>(\n    {\n        sentenceList:state.english.sentenceList,\n    }\n)\n\nexport default connect(\n    mapStateToProps,\n    {fetchSentenceList}\n)(English);","import {FETCH_VOCABULARY_LIST,FETCH_SENTENCE_LIST} from \"./types\";\nimport {API_ROOT,HEADERS} from \"../config\";\n\n\nexport const fetchSentenceList = () =>(dispatch)=>{\n    // 英語のセンテンスをリストで取得\n    // [TODO]ページング\n    const url = API_ROOT + \"/api/english/sentence_list\";\n    return fetch(\n        url,\n        {\n            method:\"GET\",\n            headers:HEADERS\n        }\n    ).then(\n        response=>{\n            if(!response.ok){\n                throw Error(response.statusText)\n            }\n            return response.json()\n        }\n    ).then(responseData=>{\n        const data = responseData.data;\n        dispatch(\n            {\n                type:FETCH_SENTENCE_LIST,\n                payload:data\n            }\n        )\n    })\n}","import React , {Component} from \"react\";\n\n\n\nclass Contact extends Component {\n    render(){\n        return(\n            <div className=\"area--Contact\">\n                <form>\n                    <label>お名前</label>\n                    <input/>\n                    <label>メールアドレス</label>\n                    <input/>\n                    <label>内容</label>\n                    <textarea/>\n                    <button>送信</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Contact;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\n\nconst Logo = ()=>{\n    return (\n        <Link className=\"area--Logo\" to=\"/\">\n            Oggy's Blog\n        </Link>\n    )\n}\n\nexport default Logo;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Logo from \"../widget/Logo\";\n\nconst Header = ()=>{\n    return (\n        <header>\n            <Logo/>\n            <nav className=\"nav--Header\">\n                <li>\n                    <Link to=\"/\" className=\"\">Top</Link>\n                </li>\n                <li>\n                    <Link to=\"/blog\" className=\"\">Blog</Link>\n                </li>\n                <li>\n                    <Link to=\"/english\" className=\"\">English</Link>\n                </li>\n                <li>\n                    <Link to=\"/contact\" className=\"\">Contact</Link>\n                </li>\n            </nav>\n        </header>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\n\nconst Footer = ()=>{\n    return (\n        <footer>\n            <div className=\"copyright--Footer\">Copyright Akihiro Ogihara All Rights Reserved.</div>\n            <div className=\"email--Footer\">ogi.hiroaki.0226@gmail.com</div>\n        </footer>\n    )\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport Root from \"./Root\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport Top from \"./containers/Top\";\nimport Blog from \"./containers/Blog\";\nimport English from \"./containers/English\";\nimport Contact from \"./containers/Contact\";\nimport Header from \"./components/layout/Header\";\nimport Footer from \"./components/layout/Footer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Root>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <main>\n              <Route path=\"/\" exact component={Top} />\n              <Route path=\"/blog\" component={Blog} />\n              <Route path=\"/english\" component={English} />\n              <Route path=\"/contact\" component={Contact} />\n            </main>\n            <Footer />\n          </div>\n        </Router>\n      </Root>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}